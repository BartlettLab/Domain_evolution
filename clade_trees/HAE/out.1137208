adding original clade sequences to hits from 1KT, storing as tree_seqs.fa
Aligning...
Filtering with noisy...
inferring tree...
IQ-TREE multicore version 1.6.3 for Linux 64-bit built Mar 22 2018
Developed by Bui Quang Minh, Nguyen Lam Tung, Olga Chernomor,
Heiko Schmidt, Dominik Schrempf, Michael Woodhams.

Host:    c18b05 (AVX, FMA3, 504 GB RAM)
Command: iqtree -s tree_alignment_out.fas -bb 1000 -nt 16 -m LG+F+R7
Seed:    41741 (Using SPRNG - Scalable Parallel Random Number Generator)
Time:    Thu Jan 16 20:10:42 2020
Kernel:  AVX+FMA - 16 threads (64 CPU cores detected)

Reading alignment file tree_alignment_out.fas ... Fasta format detected
Alignment most likely contains protein sequences
Alignment has 1565 sequences with 2250 columns, 2133 distinct patterns
1748 parsimony-informative, 256 singleton sites, 246 constant sites
WARNING: Some sequence names are changed as follows:
HSXO_# -> HSXO__
DCVZ_# -> DCVZ__
DCVZ_# -> DCVZ__
HSXO_# -> HSXO__

ERROR: Duplicated sequence name DCVZ__
ERROR: Duplicated sequence name HSXO__

------------------------------------------------------------
Sender: LSF System <lsfadmin@c18b05>
Subject: Job 1137208: <search> in cluster <umghpcc> Done

Job <search> was submitted from host <ghpcc06> by user <jm33a> in cluster <umghpcc> at Thu Jan 16 20:07:11 2020.
Job was executed on host(s) <17*c18b05>, in queue <long>, as user <jm33a> in cluster <umghpcc> at Thu Jan 16 20:07:12 2020.
</home/jm33a> was used as the home directory.
</home/jm33a/domain_evolution/1KT_searches> was used as the working directory.
Started at Thu Jan 16 20:07:12 2020.
Terminated at Thu Jan 16 20:10:42 2020.
Results reported at Thu Jan 16 20:10:42 2020.

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
#!/bin/bash

#BSUB -W 48:00             	# How much time does your job need (HH:MM)
#BSUB -R rusage[mem=500]	# How much memory
#BSUB -R span[hosts=1]		# Keep on one CPU cluster
#BSUB -n 17                	# Where X is in the set {1..X}
#BSUB -J search     	# Job Name
#BSUB -o out.%J           	# Append to output log file
#BSUB -e err.%J           	# Append to error log file
#BSUB -q long            	# Which queue to use {short, long, parallel, GPU, interactive}

module load MAFFT/7.313
module load hmmer/3.1b2
module load blast/2.2.22
module load noisy/1.5.12
module load iqtree/1.6.3

<<COMMENT
echo "building database to find priors..."
    cat $(ls ~/supertree/databases/primary_transcript_databases/*.oneline.fa) > combined_onelines.fa
    database=combined_onelines.fa
echo "collecting prior sequences from database..."
    grep -w -A 1 -f clade_input_IDs.txt --no-group-separator $database | awk '{print $1}' > input_seqs.fa #collect sequences of inputs
echo "Aligning prior sequences..."
    mafft input_seqs.fa > input_alignment.fasta #align sequences
echo "building an HMM from the alignment..."
    hmmbuild -o hmmout.txt model.hmm input_alignment.fasta #build HMM of clade


echo "collect the top 2 hits for each of the species listed in flowering_plants_species_IDs"
while read species_ID
do
    echo "Processing species $species_ID"
    directory=$(find /project/uma_madelaine_bartlett/JarrettMan/sequence_databases/1KP_seqs/seqs -name "*$species_ID*" -type d) #find directory of the species
    protein_database_path=$directory/*.prots.out #this is now the path to species' protein database
   
    test -f $protein_database_path #test if file exists. Write 0 to $? if yes, 1 if no
    if [ $? -eq 0 ] #only perform the search when a database exists, otherwise report the error
    then
        hmmsearch -o hmmout.txt --noali --tblout table.output.txt model.hmm $protein_database_path #scan all sequences from a species with the HMM model
    
        #next collec the sequence of the top n hits found in the search
        for hit_number in {4..5} #top hit is on line 4, specify how many lines after that
        do
            hit=$(sed -n "${hit_number}p" < table.output.txt | awk '{print $1}') #gene ID from hit number line
            hit_full_ID=">${species_ID}_${hit}" #concatenate the species ID and the geneID with an underscore between, using fasta format >
            echo $hit_full_ID >> top_hits.seqs.fa #add gene full gene ID to fasta sequences
            grep -w -A 1 $hit $protein_database_path | tail -n 1 >> top_hits.seqs.fa #add gene's sequence to running list
        done
    else

(... more ...)
------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   205.13 sec.
    Max Memory :                                 219 MB
    Average Memory :                             84.50 MB
    Total Requested Memory :                     8500.00 MB
    Delta Memory :                               8281.00 MB
    Max Swap :                                   -
    Max Processes :                              5
    Max Threads :                                6
    Run time :                                   210 sec.
    Turnaround time :                            211 sec.

The output (if any) is above this job summary.



PS:

Read file <err.1137208> for stderr output of this job.

